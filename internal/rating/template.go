package rating

import (
	"fmt"
	"strconv"
	"strings"
)

type (
	TopMemesTemplate struct {
		memes  []TopMemeView
		period PeriodPreset
	}

	TopAuthorsTemplate struct {
		authors []TopAuthorView
		period  PeriodPreset
	}
)

func NewTopMemesTemplate(memes []TopMemeView, period PeriodPreset) TopMemesTemplate {
	return TopMemesTemplate{
		memes:  memes,
		period: period,
	}
}

func (t TopMemesTemplate) String() string {
	message := strings.Builder{}
	message.WriteString(fmt.Sprintf("%s\n\n", t.title(t.period)))

	i := 1
	for _, view := range t.memes {
		placement := ""

		switch i {
		case 1:
			placement = "ü•á "
		case 2:
			placement = "ü•à "
		case 3:
			placement = "ü•â "
		default:
			placement = strconv.Itoa(i)
		}

		memeInfo := fmt.Sprintf("%s <%s|–û—Ç %s> (%d)\n", placement, view.Link, view.MemberFullName, view.Score)
		message.WriteString(memeInfo)

		i++
	}

	return message.String()
}

func (t TopMemesTemplate) title(period PeriodPreset) string {
	switch period {
	case TopDay:
		return "‚ôÇÔ∏èÔ∏è –¢–æ–ø –º–µ–º–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è ‚ôÄÔ∏è"
	case TopWeek:
		return "Ô∏èÔ∏èÔ∏è‚ôÇÔ∏è –¢–æ–ø –º–µ–º–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é ‚ôÄÔ∏è"
	case TopMonth:
		return "Ô∏èÔ∏è‚ôÇÔ∏è –¢–æ–ø –º–µ–º–æ–≤ –∑–∞ –º–µ—Å—è—Ü ‚ôÄÔ∏è"
	case TopEver:
		return "Ô∏èÔ∏è‚ôÇÔ∏è –¢–æ–ø –º–µ–º–æ–≤ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è ‚ôÄÔ∏è"
	}

	return "Ô∏èÔ∏è‚ôÇÔ∏è –¢–æ–ø –º–µ–º–æ–≤ –∑–∞ —Ö–∑ –∫–æ–≥–¥–∞ ‚ôÄÔ∏è"
}

func NewTopAuthorsTemplate(authors []TopAuthorView, period PeriodPreset) TopAuthorsTemplate {
	return TopAuthorsTemplate{
		authors: authors,
		period:  period,
	}
}

func (t TopAuthorsTemplate) String() string {
	message := strings.Builder{}
	message.WriteString(fmt.Sprintf("%s\n\n", t.title(t.period)))

	i := 1
	for _, view := range t.authors {
		placement := ""

		switch i {
		case 1:
			placement = "ü•á "
		case 2:
			placement = "ü•à "
		case 3:
			placement = "ü•â "
		default:
			placement = strconv.Itoa(i)
		}

		memeInfo := fmt.Sprintf("%s %s (%d)\n", placement, view.MemberFullName, view.Score)
		message.WriteString(memeInfo)

		i++
	}

	return message.String()
}

func (t TopAuthorsTemplate) title(period PeriodPreset) string {
	switch period {
	case TopDay:
		return "‚ôÇÔ∏èÔ∏è –¢–æ–ø –±–µ–∑–¥–µ–ª—å–Ω–∏–∫–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è ‚ôÄÔ∏è"
	case TopWeek:
		return "Ô∏èÔ∏èÔ∏è‚ôÇÔ∏è –¢–æ–ø –±–µ–∑–¥–µ–ª—å–Ω–∏–∫–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é ‚ôÄÔ∏è"
	case TopMonth:
		return "Ô∏èÔ∏è‚ôÇÔ∏è –¢–æ–ø –±–µ–∑–¥–µ–ª—å–Ω–∏–∫–æ–≤ –∑–∞ –º–µ—Å—è—Ü ‚ôÄÔ∏è"
	case TopEver:
		return "Ô∏èÔ∏è‚ôÇÔ∏è –¢–æ–ø –±–µ–∑–¥–µ–ª—å–Ω–∏–∫–æ–≤ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è ‚ôÄÔ∏è"
	}

	return "Ô∏èÔ∏è‚ôÇÔ∏è –¢–æ–ø –±–µ–∑–¥–µ–ª—å–Ω–∏–∫–æ–≤ –∑–∞ —Ö–∑ –∫–æ–≥–¥–∞ ‚ôÄÔ∏è"
}
